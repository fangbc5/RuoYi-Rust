//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

use super::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_user_post")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub user_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub post_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "UserEntity",
        from = "Column::UserId",
        to = "UserColumn::UserId"
    )]
    User,
    #[sea_orm(
        belongs_to = "PostEntity",
        from = "Column::PostId",
        to = "PostColumn::PostId"
    )]
    Post,
}

impl ActiveModelBehavior for ActiveModel {}

impl Related<PostEntity> for Model {
    fn to() -> RelationDef {
        Relation::Post.def()
    }
}
