//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use super::prelude::*;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "sys_role_dept")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub role_id: i64,
    #[sea_orm(primary_key, auto_increment = false)]
    pub dept_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "RoleEntity",
        from = "Column::RoleId",
        to = "super::role::Column::RoleId"
    )]
    Role,
    #[sea_orm(
        belongs_to = "DeptEntity",
        from = "Column::DeptId",
        to = "super::dept::Column::DeptId"
    )]
    Dept,
}

impl ActiveModelBehavior for ActiveModel {}

impl Related<DeptEntity> for Entity {
    fn to() -> RelationDef {
        Relation::Dept.def()
    }
}
